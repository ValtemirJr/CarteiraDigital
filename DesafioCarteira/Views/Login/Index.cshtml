@model DesafioCarteira.ViewModel.LoginViewModel

<div class="container text-center w-50">
    <form id="loginForm" data-bind="submit: handleSubmit" method="post">
        <img class="mb-4" src="/imgs/logo_multibank.png" alt="">

        <div class="form-group">
            <label for="Email" class="sr-only">Email:</label>
            <input type="text" id="Email" class="form-control" placeholder="Seu email" data-bind="value: Email" name="Email" value="@Model.Email" />
        </div>

        <div class="form-group">
            <label class="sr-only">Password:</label>
            <input type="password" class="form-control mt-2" placeholder="Senha" data-bind="value: Senha" name="Senha" value="@Model.Senha" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="checkbox">
            <label>
                <input type="checkbox" value="remember-me"> Lembrar de mim
            </label>
        </div>
        <button class="btn btn-lg btn-primary btn-block" type="submit">Confimar</button>
    </form>
</div>

<script>
    ko.validation.init({
        errorClass: "text-danger"
    });

    var LoginViewModel = function () {
        var self = this;
        self.Email = ko.observable().extend({
            required: { message: 'Por favor, preencha o seu e-mail.' },
            email: { message: 'Por favor, insira um endereço de e-mail válido.' }
        });

        self.Senha = ko.observable().extend({
            required: { message: 'Por favor, preencha o sua senha.' },
        });

        self.isValid = ko.computed(function () { return !ko.validation.group(self)().length; });

        self.handleSubmit = function (formElement) {
            if (!self.isValid()) {
                return;
            }
            formElement.submit();
        }
    }

    var loginForm = document.querySelector("#loginForm");
    ko.applyBindings(new LoginViewModel(), loginForm);
</script>